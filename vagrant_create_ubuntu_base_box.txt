#! /bin/bash

sudo apt -y install linux-headers-$(uname -r) build-essential dkms vim openssh-server ssh net-tools gcc make

cd /media/vagrant/vboxcd
sudo ./VBoxLinuxAdditions.run
sudo /media/vagrant/VBOXADDITIONS_5.1.34_121010/VBoxLinuxAdditions.run

Start/restart the service:
manually: sudo /opt/VBoxGuestAdditions*/init/vboxadd setup (add sudo sh -x to debug)
Debian: sudo /etc/init.d/vboxadd-service start

sudo vim /etc/hosts
172.28.128.1 vbhost
192.168.56.1 vbhost56

mkdir -p /home/vagrant/.ssh
wget --no-check-certificate https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub -O /home/vagrant/.ssh/authorized_keys
# Ensure we have the correct permissions set
chmod 0700 /home/vagrant/.ssh
chmod 0600 /home/vagrant/.ssh/authorized_keys
chown -R vagrant /home/vagrant/.ssh

env EDITOR=vim
sudo update-alternatives --config editor
export EDITOR=vim;
env | grep EDITOR
sudo EDITOR=vim visudo
(Finally, you can also add a line to your /etc/sudoers file near the top that reads:
Defaults editor=/usr/bin/vim
echo "Defaults editor=/usr/bin/vim" | sudo tee -a /etc/sudoers
)

sudo visudo
  vagrant ALL=(ALL) NOPASSWD:ALL

echo "$USER ALL=(ALL) NOPASSWD:ALL" | sudo tee -a /etc/sudoers

sudo vi /etc/ssh/sshd_config
  Ensure the following is set:
    Port 22
    PubKeyAuthentication yes
    AuthorizedKeysFile %h/.ssh/authorized_keys
    PermitEmptyPasswords no
sudo service ssh restart

# if /data exist
sudo chown -R $USER:$USER /data

# Disable lock screen and power display off

# Stop auto updates
sudo software-properties-kde
sudo software-properties-gtk

sudo dpkg --configure -a
sudo apt update
sudo apt -y upgrade
sudo apt -y dist-upgrade
sudo apt -y full-upgrade
# sudo apt -y clean
sudo apt -y autoremove
sudo /opt/VBoxGuestAdditions*/init/vboxadd setup

rsync -avxP --exclude="lock" exclude="partial" /var/cache/apt/archives/ juan@172.28.128.1:/home/juan/.vagrant.d/cache/kcosmic/apt/

sudo apt -y clean

sudo dd if=/dev/zero of=/EMPTY bs=1M
sudo rm -f /EMPTY

# Shutdown the machine
sudo shutdown -h now

vboxmanage list runningvms

../../../reBuildVagrantImage.sh <Vagrant Box name> <Virtual Box VM name>

ssh juan@vbhost

# Manual build
vagrant package --base <VitualBox VM Name>
vagrant box remove {boxname}
vagrant box add {boxname} package.box

# Vagrant setup and start
vagrant init {boxname}

Edit Vagrant file and add
  config.vm.provider "virtualbox" do |v|
    v.gui = true
  end

vagrant up

# Commands to upgrade inside the vagrant box
sudo apt update && sudo apt -y upgrade && sudo apt -y dist-upgrade && sudo apt -y full-upgrade && sudo apt -y autoremove
sudo flatpak update
sudo snap refresh

#Commands to upgrade through ssh
vagrant ssh -c "sudo dpkg --configure -a"
vagrant ssh -c "sudo apt update && sudo apt -y upgrade && sudo apt -y dist-upgrade && sudo apt -y full-upgrade && sudo apt -y autoremove"
vagrant ssh -c "sudo /media/vagrant/VBox_GAs_5.2.97/VBoxLinuxAdditions.run"
vagrant ssh -c "sudo dd if=/dev/zero of=/EMPTY bs=1M"
vagrant ssh -c "sudo rm -f /EMPTY"

# Using Buildman
vagrant ssh -c "/srv/share/build/buildman.sh"
vagrant ssh -c "tail -f /tmp/buildman.log"

# Vagrant mount
vagrant ssh -c "sudo mount 172.28.128.1:/data/vagrant/.vagrant.d/cache/kcosmic /tmp/vagrant-cache && sudo ln -s /tmp/vagrant-cache/apt /var/cache/apt/archives"

# Build a new vagrant box from an existing Vagrant guest
currentpath=$(pwd)
cd /home/juan/VirtualMachines/xVirtualMachines/VirtualBox/vagrantboxes/
vagrant package --base <VitualBox VM Name> --output /home/juan/VirtualMachines/xVirtualMachines/VirtualBox/vagrantboxes/package.box
cd ${currentpath}
vagrant destroy -f
vagrant box remove kcosmic
vagrant box add kcosmic /home/juan/VirtualMachines/xVirtualMachines/VirtualBox/vagrantboxes/package.box
rm /home/juan/VirtualMachines/xVirtualMachines/VirtualBox/vagrantboxes/package.box
rm -r $HOME/.vagrant.d/tmp/vagrant-package-*

# Cosmic issues with crypto
vagrant ssh -c "sudo apt remove cryptsetup-initramfs"


sudo apt update && sudo apt -y upgrade && sudo apt -y dist-upgrade && sudo apt -y full-upgrade && sudo apt -y autoremove
rsync -avxP --exclude="lock" --exclude="partial" /var/cache/apt/archives/ juan@172.28.128.1:/data/Backups/vagrantcache/kcosmic/apt/

# Host rsyncs
rsync -avxP --exclude="lock" --exclude="partial" /var/cache/apt/archives/ /data/Backups/vagrantcache/k$(lsb_release -cs)/apt/archives/
rsync -avxP --exclude="lock" --exclude="partial" /var/lib/apt/lists/ /data/Backups/vagrantcache/k$(lsb_release -cs)/apt/lists/
rsync -avxP /var/lib/flatpak/repo/refs/remotes/ /data/Backups/vagrantcache/k$(lsb_release -cs)/flatpak/repo/refs/remotes/
rsync -avxP /var/lib/gems/ /data/Backups/vagrantcache/k$(lsb_release -cs)/gems/

# Host rsynch from Vagrant guest
rsync -avxP --exclude="lock" --exclude="partial" vagrant@172.28.128.4:/var/cache/apt/archives/ /data/Backups/vagrantcache/k$(lsb_release -cs)/apt/archives/

# Vagrant to host rsynch
rsync -avxP --exclude="lock" --exclude="partial" /var/cache/apt/archives/ juan@172.28.128.1/data/Backups/vagrantcache/k$(lsb_release -cs)/apt/archives/ 

# Vagrant guest rsyncs
rsync -avxP  /var/lib/flatpak/repo/refs/remotes/ juan@172.28.128.1:/data/Backups/vagrantcache/k$(lsb_release -cs)/flatpak/repo/refs/remotes/
sudo rsync -avxP juan@172.28.128.1:/data/Backups/vagrantcache/k$(lsb_release -cs)/flatpak/repo/refs/remotes/ /var/lib/flatpak/repo/refs/remotes/
